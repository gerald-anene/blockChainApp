{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gerald.Anene\\\\React\\\\BlockChain-React\\\\blockchain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport BlockChain from './BlockChain';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => {\n  return {\n    data: state.MineDataEntry.data\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.mineData = event => {\n      this.setState({\n        data: event.target.value.trim()\n      });\n      this.setState({\n        isEmptyData: false\n      });\n    };\n\n    this.mineBlock = newBlock => {\n      if (this.state.data.length > 0) {\n        newBlock.previousHash = this.BlockChain.GetLatestBlock().hash;\n        newBlock.Mine(this.BlockChain.difficulty);\n        this.BlockChain.chain.push(newBlock);\n        this.setState(Object.assign({}, this.state, {\n          chains: [...this.state.chains, newBlock]\n        }));\n        this.setState({\n          data: ''\n        });\n      } else {\n        console.log(\"error\");\n      }\n    };\n\n    this.BlockChain = new BlockChain();\n    this.state = {\n      data: '',\n      chains: [this.BlockChain.GenesisBlock()]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BlockChain, {\n      mineData: this.mineData,\n      data: this.state.data,\n      mineBlock: this.mineBlock,\n      chains: this.state.chains,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 8\n      }\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Gerald.Anene/React/BlockChain-React/blockchain/src/App.js"],"names":["React","Component","BlockChain","connect","mapStateToProps","state","data","MineDataEntry","App","constructor","mineData","event","setState","target","value","trim","isEmptyData","mineBlock","newBlock","length","previousHash","GetLatestBlock","hash","Mine","difficulty","chain","push","Object","assign","chains","console","log","GenesisBlock","render","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,MAAMC,eAAe,GAACC,KAAK,IAAE;AACzB,SAAO;AACEC,IAAAA,IAAI,EAACD,KAAK,CAACE,aAAN,CAAoBD;AAD3B,GAAP;AAGD,CAJH;;AAMA,MAAME,GAAN,SAAkBP,SAAlB,CAA2B;AACzBQ,EAAAA,WAAW,GAAE;AACX;;AADW,SAUbC,QAVa,GAUHC,KAAD,IAAS;AAEd,WAAKC,QAAL,CAAc;AAACN,QAAAA,IAAI,EAACK,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBC,IAAnB;AAAN,OAAd;AACA,WAAKH,QAAL,CAAc;AAACI,QAAAA,WAAW,EAAC;AAAb,OAAd;AAGH,KAhBY;;AAAA,SAkBbC,SAlBa,GAkBFC,QAAD,IAAY;AACpB,UAAG,KAAKb,KAAL,CAAWC,IAAX,CAAgBa,MAAhB,GAAuB,CAA1B,EAA4B;AACtBD,QAAAA,QAAQ,CAACE,YAAT,GAAsB,KAAKlB,UAAL,CAAgBmB,cAAhB,GAAiCC,IAAvD;AACAJ,QAAAA,QAAQ,CAACK,IAAT,CAAc,KAAKrB,UAAL,CAAgBsB,UAA9B;AACA,aAAKtB,UAAL,CAAgBuB,KAAhB,CAAsBC,IAAtB,CAA2BR,QAA3B;AACA,aAAKN,QAAL,CAAce,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB,KAAKvB,KAAtB,EAA4B;AAACwB,UAAAA,MAAM,EAAC,CAAC,GAAG,KAAKxB,KAAL,CAAWwB,MAAf,EAAsBX,QAAtB;AAAR,SAA5B,CAAd;AACA,aAAKN,QAAL,CAAc;AAACN,UAAAA,IAAI,EAAC;AAAN,SAAd;AAEL,OAPD,MAOK;AACHwB,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AAGF,KA/BY;;AAEX,SAAK7B,UAAL,GAAgB,IAAIA,UAAJ,EAAhB;AAEA,SAAKG,KAAL,GAAW;AACTC,MAAAA,IAAI,EAAC,EADI;AAETuB,MAAAA,MAAM,EAAC,CAAC,KAAK3B,UAAL,CAAgB8B,YAAhB,EAAD;AAFE,KAAX;AAID;;AA0BDC,EAAAA,MAAM,GAAE;AAEN,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKvB,QAA3B;AAAqC,MAAA,IAAI,EAAE,KAAKL,KAAL,CAAWC,IAAtD;AAA4D,MAAA,SAAS,EAAE,KAAKW,SAA5E;AAAuF,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWwB,MAA1G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADF,CADA;AAQD;;AA7CwB;;AAiD3B,eAAe1B,OAAO,CAACC,eAAD,EAAiB8B,kBAAjB,CAAP,CAA4C1B,GAA5C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport BlockChain from './BlockChain';\nimport { connect } from 'react-redux';\n\n\nconst mapStateToProps=state=>{\n    return {\n             data:state.MineDataEntry.data\n           }\n  }\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.BlockChain=new BlockChain();\n  \n    this.state={\n      data:'',\n      chains:[this.BlockChain.GenesisBlock()],\n    }\n  }\n\n  mineData=(event)=>{\n\n      this.setState({data:event.target.value.trim()})\n      this.setState({isEmptyData:false});\n    \n    \n  }\n\n  mineBlock=(newBlock)=>{\n    if(this.state.data.length>0){\n          newBlock.previousHash=this.BlockChain.GetLatestBlock().hash;\n          newBlock.Mine(this.BlockChain.difficulty);\n          this.BlockChain.chain.push(newBlock);\n          this.setState(Object.assign({},this.state,{chains:[...this.state.chains,newBlock]}));\n          this.setState({data:''})\n\n    }else{\n      console.log(\"error\")\n    }\n \n    \n  }\n\n\n  render(){\n\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <BlockChain mineData={this.mineData} data={this.state.data} mineBlock={this.mineBlock} chains={this.state.chains}/>\n      </header>\n    </div>\n  );\n\n  }\n  \n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}