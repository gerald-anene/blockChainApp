{"ast":null,"code":"import { MINE_DATA, RESET_DATA, UPDATE_BLOCK_CHAIN } from './constant';\nimport BlockChain from './BlockChain';\nconst initialInputState = {\n  data: ''\n};\nconst initialBlockChain = {\n  chains: [blocks.GenesisBlock()]\n};\nexport const MineDataEntry = (state = initialInputState, action = '') => {\n  switch (action.type) {\n    case MINE_DATA:\n      return Object.assign({}, state, {\n        data: action.payload\n      });\n\n    case RESET_DATA:\n      return Object.assign({}, state, {\n        data: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\nexport const UpdateBlockChain = (state = initialBlockChain, action = '') => {\n  switch (action.type) {\n    case UPDATE_BLOCK_CHAIN:\n      return Object.assign({}, state, {\n        chains: action.payload\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Gerald.Anene/React/BlockChain-React/blockchain/src/reducer.js"],"names":["MINE_DATA","RESET_DATA","UPDATE_BLOCK_CHAIN","BlockChain","initialInputState","data","initialBlockChain","chains","blocks","GenesisBlock","MineDataEntry","state","action","type","Object","assign","payload","UpdateBlockChain"],"mappings":"AAAA,SACKA,SADL,EAEKC,UAFL,EAGKC,kBAHL,QAIY,YAJZ;AAMA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,MAAMC,iBAAiB,GAAC;AACrBC,EAAAA,IAAI,EAAC;AADgB,CAAxB;AAIA,MAAMC,iBAAiB,GAAC;AACvBC,EAAAA,MAAM,EAAC,CAACC,MAAM,CAACC,YAAP,EAAD;AADgB,CAAxB;AAIA,OAAO,MAAMC,aAAa,GAAC,CAACC,KAAK,GAACP,iBAAP,EAAyBQ,MAAM,GAAC,EAAhC,KAAqC;AAC/D,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKb,SAAL;AACA,aAAOc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAACN,QAAAA,IAAI,EAACO,MAAM,CAACI;AAAb,OAAvB,CAAP;;AAEA,SAAKf,UAAL;AACA,aAAOa,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAACN,QAAAA,IAAI,EAACO,MAAM,CAACI;AAAb,OAAvB,CAAP;;AAEA;AACA,aAAOL,KAAP;AARD;AAUA,CAXM;AAaP,OAAO,MAAMM,gBAAgB,GAAC,CAACN,KAAK,GAACL,iBAAP,EAAyBM,MAAM,GAAC,EAAhC,KAAqC;AAClE,UAAOA,MAAM,CAACC,IAAd;AACC,SAAKX,kBAAL;AACA,aAAOY,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,KAAjB,EAAuB;AAACJ,QAAAA,MAAM,EAACK,MAAM,CAACI;AAAf,OAAvB,CAAP;;AAEA;AACA,aAAOL,KAAP;AALD;AASA,CAVM","sourcesContent":["import { \r\n\t    MINE_DATA,\r\n\t    RESET_DATA,\r\n\t    UPDATE_BLOCK_CHAIN\r\n\t    } from './constant';\r\n\r\nimport BlockChain from './BlockChain';\r\n\r\nconst initialInputState={\r\n   data:''\r\n}\r\n\r\nconst initialBlockChain={\r\n\tchains:[blocks.GenesisBlock()]\r\n}\r\n\r\nexport const MineDataEntry=(state=initialInputState,action='')=>{\r\n\tswitch(action.type){\r\n\t\tcase MINE_DATA:\r\n\t\treturn Object.assign({},state,{data:action.payload});\r\n\r\n\t\tcase RESET_DATA:\r\n\t\treturn Object.assign({},state,{data:action.payload})\r\n\r\n\t\tdefault:\r\n\t\treturn state;\r\n\t}\r\n}\r\n\r\nexport const UpdateBlockChain=(state=initialBlockChain,action='')=>{\r\n\tswitch(action.type){\r\n\t\tcase UPDATE_BLOCK_CHAIN:\r\n\t\treturn Object.assign({},state,{chains:action.payload});\r\n\r\n\t\tdefault:\r\n\t\treturn state;\r\n\r\n\t}\r\n\r\n}"]},"metadata":{},"sourceType":"module"}