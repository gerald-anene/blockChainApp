{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Gerald.Anene\\\\React\\\\BlockChain-React\\\\blockchain\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport BlockChain from './BlockChain';\nimport { connect } from 'react-redux';\nimport { onDataEntry } from './action';\n\nconst mapStateToProps = state => {\n  return {\n    data: state.MineDataEntry.data\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    mineData: event => dispatch(onDataEntry(event.target.value))\n  };\n};\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.mineBlock = newBlock => {\n      if (this.props.data.length > 0) {\n        newBlock.previousHash = this.BlockChain.GetLatestBlock().hash;\n        newBlock.Mine(this.BlockChain.difficulty);\n        this.BlockChain.chain.push(newBlock);\n        this.setState(Object.assign({}, this.state, {\n          chains: [...this.state.chains, newBlock]\n        }));\n\n        this.props.data = dispatch => dispatch(onDataEntry(''));\n      } else {\n        console.log(\"error\");\n      }\n    };\n\n    this.BlockChain = new BlockChain();\n    this.state = {\n      chains: [this.BlockChain.GenesisBlock()]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(BlockChain, {\n      mineData: this.props.mineData,\n      data: this.props.data,\n      mineBlock: this.mineBlock,\n      chains: this.state.chains,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 8\n      }\n    })));\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Gerald.Anene/React/BlockChain-React/blockchain/src/App.js"],"names":["React","Component","BlockChain","connect","onDataEntry","mapStateToProps","state","data","MineDataEntry","mapDispatchToProps","dispatch","mineData","event","target","value","App","constructor","mineBlock","newBlock","props","length","previousHash","GetLatestBlock","hash","Mine","difficulty","chain","push","setState","Object","assign","chains","console","log","GenesisBlock","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA6B,UAA7B;;AAGA,MAAMC,eAAe,GAACC,KAAK,IAAE;AACzB,SAAO;AACEC,IAAAA,IAAI,EAACD,KAAK,CAACE,aAAN,CAAoBD;AAD3B,GAAP;AAGD,CAJH;;AAME,MAAME,kBAAkB,GAACC,QAAQ,IAAE;AACjC,SAAM;AACCC,IAAAA,QAAQ,EAAEC,KAAD,IAASF,QAAQ,CAACN,WAAW,CAACQ,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AAD3B,GAAN;AAGD,CAJD;;AAMF,MAAMC,GAAN,SAAkBd,SAAlB,CAA2B;AACzBe,EAAAA,WAAW,GAAE;AACX;;AADW,SASbC,SATa,GASFC,QAAD,IAAY;AACpB,UAAG,KAAKC,KAAL,CAAWZ,IAAX,CAAgBa,MAAhB,GAAuB,CAA1B,EAA4B;AACtBF,QAAAA,QAAQ,CAACG,YAAT,GAAsB,KAAKnB,UAAL,CAAgBoB,cAAhB,GAAiCC,IAAvD;AACAL,QAAAA,QAAQ,CAACM,IAAT,CAAc,KAAKtB,UAAL,CAAgBuB,UAA9B;AACA,aAAKvB,UAAL,CAAgBwB,KAAhB,CAAsBC,IAAtB,CAA2BT,QAA3B;AACA,aAAKU,QAAL,CAAcC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiB,KAAKxB,KAAtB,EAA4B;AAACyB,UAAAA,MAAM,EAAC,CAAC,GAAG,KAAKzB,KAAL,CAAWyB,MAAf,EAAsBb,QAAtB;AAAR,SAA5B,CAAd;;AACA,aAAKC,KAAL,CAAWZ,IAAX,GAAgBG,QAAQ,IAAEA,QAAQ,CAACN,WAAW,CAAC,EAAD,CAAZ,CAAlC;AAEL,OAPD,MAOK;AACH4B,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AAGF,KAtBY;;AAEX,SAAK/B,UAAL,GAAgB,IAAIA,UAAJ,EAAhB;AAEA,SAAKI,KAAL,GAAW;AACTyB,MAAAA,MAAM,EAAC,CAAC,KAAK7B,UAAL,CAAgBgC,YAAhB,EAAD;AADE,KAAX;AAGD;;AAkBDC,EAAAA,MAAM,GAAE;AAEN,wBACA;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC,oBAAC,UAAD;AAAY,MAAA,QAAQ,EAAE,KAAKhB,KAAL,CAAWR,QAAjC;AAA2C,MAAA,IAAI,EAAE,KAAKQ,KAAL,CAAWZ,IAA5D;AAAkE,MAAA,SAAS,EAAE,KAAKU,SAAlF;AAA6F,MAAA,MAAM,EAAE,KAAKX,KAAL,CAAWyB,MAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CADF,CADA;AAQD;;AApCwB;;AAwC3B,eAAe5B,OAAO,CAACE,eAAD,EAAiBI,kBAAjB,CAAP,CAA4CM,GAA5C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport './App.css';\nimport BlockChain from './BlockChain';\nimport { connect } from 'react-redux';\nimport { onDataEntry }  from './action';\n\n\nconst mapStateToProps=state=>{\n    return {\n             data:state.MineDataEntry.data\n           }\n  }\n\n  const mapDispatchToProps=dispatch=>{\n    return{\n           mineData:(event)=>dispatch(onDataEntry(event.target.value))\n          }\n  }\n\nclass App extends Component{\n  constructor(){\n    super();\n    this.BlockChain=new BlockChain();\n  \n    this.state={\n      chains:[this.BlockChain.GenesisBlock()],\n    }\n  }\n\n  mineBlock=(newBlock)=>{\n    if(this.props.data.length>0){\n          newBlock.previousHash=this.BlockChain.GetLatestBlock().hash;\n          newBlock.Mine(this.BlockChain.difficulty);\n          this.BlockChain.chain.push(newBlock);\n          this.setState(Object.assign({},this.state,{chains:[...this.state.chains,newBlock]}));\n          this.props.data=dispatch=>dispatch(onDataEntry(''));\n\n    }else{\n      console.log(\"error\")\n    }\n \n    \n  }\n\n\n  render(){\n\n    return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <BlockChain mineData={this.props.mineData} data={this.props.data} mineBlock={this.mineBlock} chains={this.state.chains}/>\n      </header>\n    </div>\n  );\n\n  }\n  \n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}